name: CI - Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Run comprehensive HTML generation test
      run: node test-generate-all.js
      
    - name: Test individual directories
      run: |
        echo "üß™ Testing individual directories..."
        echo ""
        
        # Test photometadat (most complete)
        echo "üìÅ Testing photometadat..."
        node bin/fact-sheet.js generate --input ./example-data/photometadat/ --output ./test-individual/photometadat --verbose
        
        # Test seed-data
        echo "üìÅ Testing seed-data..."
        node bin/fact-sheet.js generate --input ./example-data/seed-data/ --output ./test-individual/seed-data --verbose
        
        # Test with inline assets
        echo "üìÅ Testing with inline assets..."
        node bin/fact-sheet.js generate --input ./example-data/photometadat/ --output ./test-inline/photometadat --verbose --inline-css --inline-js
        
        echo "‚úÖ All individual tests completed"
        
    - name: Validate generated HTML
      run: |
        echo "üîç Validating generated HTML files..."
        
        # Check for required HTML structure
        for html_file in $(find test-output test-individual test-inline -name "*.html" 2>/dev/null); do
          echo "Checking: $html_file"
          
          # Check file size
          size=$(stat -f%z "$html_file" 2>/dev/null || stat -c%s "$html_file" 2>/dev/null)
          if [ "$size" -lt 1000 ]; then
            echo "‚ö†Ô∏è  Warning: $html_file is small ($size bytes)"
          fi
          
          # Check for required HTML tags
          if ! grep -q "<!DOCTYPE html>" "$html_file"; then
            echo "‚ùå Error: $html_file missing DOCTYPE"
            exit 1
          fi
          
          if ! grep -q "<html" "$html_file"; then
            echo "‚ùå Error: $html_file missing html tag"
            exit 1
          fi
          
          if ! grep -q "<head>" "$html_file"; then
            echo "‚ùå Error: $html_file missing head tag"
            exit 1
          fi
          
          if ! grep -q "<body>" "$html_file"; then
            echo "‚ùå Error: $html_file missing body tag"
            exit 1
          fi
          
          if ! grep -q "</html>" "$html_file"; then
            echo "‚ùå Error: $html_file missing closing html tag"
            exit 1
          fi
          
          echo "‚úÖ $html_file validation passed"
        done
        
        echo "üéâ All HTML files validated successfully!"
        
    - name: Check asset copying
      run: |
        echo "üì¶ Checking asset copying..."
        
        # Check if CSS files are copied
        css_count=$(find test-output test-individual test-inline -name "*.css" 2>/dev/null | wc -l)
        echo "üìÑ CSS files found: $css_count"
        
        # Check if JS files are copied
        js_count=$(find test-output test-individual test-inline -name "*.js" 2>/dev/null | wc -l)
        echo "üìÑ JS files found: $js_count"
        
        # Check if SVG icons are copied
        svg_count=$(find test-output test-individual test-inline -name "*.svg" 2>/dev/null | wc -l)
        echo "üìÑ SVG files found: $svg_count"
        
        # Check if images are copied
        img_count=$(find test-output test-individual test-inline -name "*.jpg" -o -name "*.png" 2>/dev/null | wc -l)
        echo "üìÑ Image files found: $img_count"
        
        if [ "$css_count" -eq 0 ] || [ "$js_count" -eq 0 ] || [ "$svg_count" -eq 0 ]; then
          echo "‚ùå Error: Missing required assets"
          exit 1
        fi
        
        echo "‚úÖ Asset copying validation passed"
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-artifacts
        path: |
          test-output/
          test-individual/
          test-inline/
        retention-days: 7
        
    - name: Test summary
      run: |
        echo "üìä Test Summary:"
        echo "================"
        echo "üìÅ Total HTML files: $(find test-output test-individual test-inline -name "*.html" 2>/dev/null | wc -l)"
        echo "üìÑ Total CSS files: $(find test-output test-individual test-inline -name "*.css" 2>/dev/null | wc -l)"
        echo "üìÑ Total JS files: $(find test-output test-individual test-inline -name "*.js" 2>/dev/null | wc -l)"
        echo "üìÑ Total SVG files: $(find test-output test-individual test-inline -name "*.svg" 2>/dev/null | wc -l)"
        echo "üìÑ Total image files: $(find test-output test-individual test-inline -name "*.jpg" -o -name "*.png" 2>/dev/null | wc -l)"
        echo ""
        echo "üéØ All tests completed successfully!" 